class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        while(head!=NULL && head->val==val){
            head=head->next;//jab head pr hi value hogi 
        }
        ListNode* temp=head;//create temp if val!=head;
        while(temp!=NULL && temp->next!=NULL){
            if(temp->next->val==val){
                temp->next=temp->next->next;  
                }
                else{
                    temp=temp->next;
                }
        }
        return head;
    }
};
**********linked list is palindrome or not****************
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        stack<int> s;
        ListNode* temp=head;
        while(temp!=NULL){
            s.push(temp->val);
            temp=temp->next;
        }
        temp=head;
        while(!s.empty()){
        if(s.top() != temp->val){
            return false;
        }
        else{
            s.pop();
            temp=temp->next;
        }
        }
        return true;
    }
};
