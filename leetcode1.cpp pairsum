//PAIR SUM USING O(n^2) time complexity:
#include <iostream>
using namespace std;
int main(){
    int arr[5];
    int i,j,target,n=5;
    cout<<"enter the element of array"<<endl;
    for( i=0; i<n; i++){
        cin>>arr[i];
    }
cout<<"Enter the value of target"<<endl;
cin>>target;
for(i=0; i<n; i++){
    for(j=i+1; j<n; j++){
        if(arr[i]+arr[j]==target){
            cout<<i <<","<<j;
            break;
        }
    }
}
    return 0;
}
//pair sum using vector and 2 pointer approach
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector <int> pairsum(vector <int>arr,int target){
    int st=0,end=arr.size()-1;
    int currsum=0;
    vector <int> ans;
    while(st<end){
        currsum=arr[st]+arr[end];
        if(currsum==target){
            ans.push_back(arr[st]);
            ans.push_back(arr[end]);
            break;
        }
        else if(currsum>target){
            end--;
        }
        else{
            st++;
        }
    }
    return ans;
    
}
int main(){
    vector <int> arr;
    int i,j,n,element,target;
     cout<<"Enter the number of element to store "<<endl;
     cin>>n;
    for(i=0;i<n;i++){
        cout<<"Enter element at position "<<i<<endl;
        cin>>element;
        arr.push_back(element);
    }
    for(j=0;j<n;j++){
        cout<<arr[j]<<" "<<endl;
    }
    cout<<"enter the value of target"<<endl;
    cin>>target;
    sort(arr.begin(),arr.end());//ascending order
    vector <int> result=pairsum(arr,target);
    for(i=0;i<result.size();i++){
        cout<<result[i];
    }
    return 0;
}
